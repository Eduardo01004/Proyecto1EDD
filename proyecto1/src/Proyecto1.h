// This file generated by ngrestcg
// For more information, please visit: https://github.com/loentar/ngrest

#ifndef PROYECTO1_H
#define PROYECTO1_H

#include <ngrest/common/Service.h>
#include <list>
#include <string.h>
#include "Arbol.h"
#include "raiz.h"
#include "ListaCircular.h"
#include "ListaEdificios.h"
#include "ListaDias.h"

struct InformacionSerial{

  std::string codigo;
  std::string nombre;

};

struct CircularL{

  std::string codigo;
  std::string curso;
  std::string catedratico;
};
struct CoorMat{
  int coorx;
  int coory;
  std::string datohora;
  std::string datosalon;
  std::string datocurso;
  int capacidad;
std::string edificio;
std::string dia;
std::string datocate;


};
struct Edificioserial{
  int codigo;
  std::string edificio;
  std::string datosalon;
  int capacidad;



};



// *location: proyecto1
class Proyecto1: public ngrest::Service
{
public:

  // To invoke this operation from browser open: http://localhost:9098/proyecto1/World!

  /*----------METODOS DE INSERTAR----------*/
  // *method: POST
  // *location: /insertarDato/{informacion}
  std::string insertarDato(InformacionSerial informacion);
  // *method: POST
  // */location: /InsertarCircular/{curso}
  std::string InsertarCircular(CircularL curso);
  // *method: POST
  // *location: /insertarMatriz/{mat}
  std::string insertarMat(CoorMat mat);
  // *method: POST
  // *location: /InsertarListaDoble/{edifi}
  std::string InsertarListaDoble(Edificioserial edifi);
  // *method: POST
  // *location: /modificarEdificio/{cod}/{cur}
  std::string modificarEdificio(int cod, std::string cur);
  // *method: POST
  // *location: /borrarEdificios/{cod}
  std::string borrarEdificios(int cod);


  /*-----------METODOS DE GET DE DATOS-------------*/
  // *method: GET
  // *location: /Mostrar
  std::list<Edificioserial> Mostrar();
  // *method: GET
  // *location: /BuscarCatedratico/{cod}
  std::string BuscarCatedratico(std::string cod);
  // *method: GET
  // *location: /mostrarMatriz
  std::string mostrarMatriz();
  /*ARBOL ABB***-/*/
  // *method: GET
  // *location: /inOrden
  std::string inOrden();

  // *method: GET
  // */location: /MostrarCir

  std::string MostrarCir();

  /*-------------METODOS DE ELIMINAR-------------*/
  // *method: POST
  // *location: /deletecurso/{codigo}
  std::string deletecurso(std::string codigo);

  // *method: POST
  // *location: /borrar/{n}
  std::string borrar(std::string n);

  /**---------------METODOS PARA MODIFICAR--------------*/

  // *method: POST
  // */location: /Update/{cod,curso}
  std::string Update(std::string cod,CircularL curso);
  // *method: POST
  // *location: /modificarCatedratico/{cod}/{nom}
  std::string modificarCatedratico(std::string cod, std::string nom);

  /*--------------METODOS PARA GRAFICAR----------*/

  // *method: GET
  // *location: /graficaBinario
  std::string graficaBinario();

  // *method: GET
  // *location: /graficarCursos
  std::string graficarCursos();
  // *method: GET
  // *location: /graficaredi
  std::string graficaredi();
  // *method: GET
  // *location: /graficarAgenda
  std::string graficarAgenda();

  /*------------METODOS PARA BASE64--------------*/
  // *method: GET
  // *location: /getB64
  std::string getB64();
  // *method: GET
  // *location: /getB64Arbol
  std::string getB64Arbol();
  // *method: GET
  // *location: /getB64Agenda
  std::string getB64Agenda();


};


#endif // PROYECTO1_H
